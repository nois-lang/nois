next = seq -> seq.map((e, i) {
    // TODO: window
    prev = i - 1 < 0 || seq.at(i - 1)
    next = i + 1 >= seq.len() || seq.at(i + 1)
    match [prev, e, next] {
        [True , True , True ] => False,
        [True , False, False] => False,
        [False, False, False] => False,
        _ => True,
    }
})

pretty = grid -> grid
    .map(seq -> seq.map(e -> match e { True  => 'x', False => ' ' }).flat())
    .map(seq -> println(seq))

main = {
    [start, iters] = match args() { [s, i] => [s, i.to(I)], _ => panic() }
    pad = range(iters - 1).map(_ -> False)
    s = start.map(d -> match [d] { '1' => True, '0' => False, _ => panic(d) })
    r = range(iters).reduce([[..pad, ..s]], acc { n = next(acc.at(-1)) ~ ..acc + n })
    pretty(r)
}
