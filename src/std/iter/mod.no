trait Iterable<T> {
    fn iter(self): Iter<T>
}

trait Iter<T> {
    fn next(self): Option<T>

    fn collect<C: Collector<T>>(self): C {
        C::fromIter(self)
    }
}

impl <T> Iterable<T> for Iter<T> {
    fn iter(self): Iter<T> {
        return self
    }
}

trait Collector<T> {
    fn fromIter<I: Iter<T>>(iter: I): Self
}
