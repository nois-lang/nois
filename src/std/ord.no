pub type Ordering {
    Less,
    Equal,
    Greater
}

pub trait Ord<Self: Eq> {
    fn cmp(self, other: Self): Ordering

    fn ge(self, other: Self): Bool {
        match self.cmp(other) {
            Less() { false }
            _ { true }
        }
    }

    fn le(self, other: Self): Bool {
        match self.cmp(other) {
            Greater() { false }
            _ { true }
        }
    }

    fn gt(self, other: Self): Bool {
        match self.cmp(other) {
            Greater() { true }
            _ { false }
        }
    }

    fn lt(self, other: Self): Bool {
        match self.cmp(other) {
            Less() { true }
            _ { false }
        }
    }
}

