type Option<T> {
    Some(value: T),
    None
}

impl <T> Option<T> {
    fn map<U>(self, f: |T|: U): Option<U> {
        todo("Option::map")
    }
    fn take(self): Option<T> {
        todo("Option::take")
    }
    fn isSome(self): Bool {
        todo("Option::isSome")
    }
}
