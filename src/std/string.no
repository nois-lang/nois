use std::io::Display

pub type String

impl String {
    // TODO: belongs to the Monoid trait
    pub fn concat(self, other: Self): Self {
        concatString(self, other)
    }
}

impl Display for String {
    fn fmt(self): String {
        self
    }
}

impl Eq for String {
    fn eq(self, other: Self): Bool {
        eqString(self, other)
    }
}

impl Collector<String> for String {
    fn fromIter(iter: Iter<String>): Self {
        let res = ""
        for i in iter {
            res = res.concat(i)
        }
        res
    }
}

impl Copy for Int {
    fn copy(self): Self {
        copy(self)
    }
}

fn concatString(a: String, b: String): String

fn eqString(a: String, b: String): Bool
