import { readdirSync, statSync, writeFileSync } from 'fs'
import { basename, dirname, extname, join, relative } from 'path'
import { fileURLToPath } from 'url'

const getPackageModulePaths = (packagePath: string): string[] => {
    const pkgName = basename(packagePath)
    return listFiles(packagePath)
        .filter(f => extname(f).toLowerCase() === '.no')
        .map(p => join(pkgName, relative(packagePath, p)))
}

const listFiles = (dir: string): string[] => {
    return readdirSync(dir).flatMap(f => {
        const fPath = join(dir, f)
        return statSync(fPath).isDirectory() ? listFiles(fPath) : [fPath]
    })
}

const stdPath = join(dirname(fileURLToPath(import.meta.url)), 'src', 'std')
const vids = getPackageModulePaths(stdPath)
const f = `// generated by \`build-std-index.ts\`
export const stdModuleVids = ${JSON.stringify(vids)}`
writeFileSync('dist/std-index.js', f)
